{"version":3,"sources":["containers/Orders/at.js","containers/Orders/initState.js","containers/Products/at.js","containers/Products/initState.js","rootReducer.js","containers/Orders/reducer.js","containers/Products/reducer.js","store.js","rootRoutes/routes.js","containers/Orders/Component.js","containers/Orders/index.js","containers/Orders/actions.js","containers/Products/Component.js","containers/Products/index.js","containers/Products/actions.js","containers/Navigation/Component.js","containers/Navigation/index.js","main/Component.js","main/index.js","rootRoutes/index.js","index.js"],"names":["at","SET_DISCOVERY_METAL_DELAY","initState","discoveryInfo","txDelay","metalDelay","Products_at","SET_DISCOVERY","Products_initState","combineReducers","orders","state","arguments","length","undefined","actions","type","update","$set","data","SET_DISCOVERY_TX_DELAY","products","middlewares","thunkMiddleware","composeEnhancers","composeWithDevTools","store","createStore","rootReducer","applyMiddleware","apply","routes","Orders","sliderValue","device","serialNumber","onDiscoveryTool","metalDelayFirst","txDelayFirst","parsedScope","discoveryToolResponseNoParsed","next","react_default","a","createElement","className","Component","connect","s","d","getTxMetalDelay","sn","dispatch","getState","Products","setProduct","Navigation","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","connectInfo","NavLink","to","rc","ControlPanel","nextProps","containers_Navigation","Switch","Route","component","path","React","withRouter","Routes","BrowserRouter","main","ReactDOM","render","es","rootRoutes","document","getElementById"],"mappings":"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","file":"static/js/main.03f857b6.chunk.js","sourcesContent":["export default {\r\n \r\n  SET_DISCOVERY_METAL_DELAY: 'SET_DISCOVERY_METAL_DELAY',\r\n}\r\n","export default {\r\n  discoveryInfo: null,\r\n  txDelay: null,\r\n  metalDelay: null,\r\n}\r\n","export default {\r\n  SET_DISCOVERY: 'SET_DISCOVERY',\r\n\r\n}\r\n","export default {\r\n  discoveryInfo: null,\r\n  txDelay: null,\r\n  metalDelay: null,\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport orders from './containers/Orders/reducer';\r\nimport products from './containers/Products/reducer';\r\n\r\nexport default combineReducers({\r\n  orders,\r\n  products,\r\n})","import update from 'immutability-helper';\r\nimport at from './at';\r\nimport initState from './initState';\r\n\r\nexport default (state = initState, actions) => {\r\n\r\n  switch (actions.type) {\r\n   \r\n      case at.SET_DISCOVERY:\r\n        return update(state, {\r\n          discoveryInfo:{$set: actions.data}\r\n      });\r\n      case at.SET_DISCOVERY_TX_DELAY:\r\n        return update(state, {\r\n          txDelay:{$set: actions.data}\r\n      });\r\n      case at.SET_DISCOVERY_METAL_DELAY:\r\n        return update(state, {\r\n          metalDelay:{$set: actions.data}\r\n      });\r\n   \r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import update from 'immutability-helper';\r\nimport at from './at';\r\nimport initState from './initState';\r\n\r\nexport default (state = initState, actions) => {\r\n\r\n  switch (actions.type) {\r\n   \r\n      case at.SET_DISCOVERY:\r\n        return update(state, {\r\n          discoveryInfo:{$set: actions.data}\r\n      });\r\n      case at.SET_DISCOVERY_TX_DELAY:\r\n        return update(state, {\r\n          txDelay:{$set: actions.data}\r\n      });\r\n      case at.SET_DISCOVERY_METAL_DELAY:\r\n        return update(state, {\r\n          metalDelay:{$set: actions.data}\r\n      });\r\n   \r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import thunkMiddleware from 'redux-thunk';\r\nimport { applyMiddleware, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport rootReducer from './rootReducer';\r\n\r\nconst middlewares = [thunkMiddleware];\r\n\r\nconst composeEnhancers = composeWithDevTools({});\r\nconst store = createStore(\r\n  rootReducer,\r\n  {},\r\n  composeEnhancers(applyMiddleware(...middlewares)),\r\n);\r\n\r\n\r\n\r\nexport default store","export default {\r\n  products: '/products',\r\n  orders: '/orders',\r\n \r\n}","import React , {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Orders.scss';\r\n\r\n\r\n\r\nclass Orders extends Component {\r\n  state = {\r\n    sliderValue: 0,\r\n    device: null,\r\n    serialNumber: '',\r\n    onDiscoveryTool: false,\r\n    txDelay: 0,\r\n    metalDelay: 0,\r\n    metalDelayFirst: true,\r\n    txDelayFirst: true,\r\n    parsedScope: [],\r\n    discoveryToolResponseNoParsed: ''\r\n  };\r\n\r\n  componentDidMount() {\r\n\r\n  }\r\n\r\n\r\n  componentWillMount() {\r\n   \r\n  }\r\n\r\n\r\n\r\n  componentWillUnmount() {\r\n  }\r\n\r\n  componentWillReceiveProps(next) {\r\n   \r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n\r\n\r\n\r\n    return (\r\n      <div className=\"discovery-section\">\r\n         Orders\r\n         \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nOrders.propTypes = {\r\n  deviceConnected: PropTypes.bool,\r\n  devicesData: PropTypes.array,\r\n  device: PropTypes.object,\r\n  discoveryToolResponse: PropTypes.object,\r\n  discoveryTXDelay: PropTypes.object,\r\n  discoveryMetalDelay: PropTypes.object,\r\n  startTransmission: PropTypes.func,\r\n  stopTransmission: PropTypes.func,\r\n  getTxMetalDelay: PropTypes.func,\r\n  setTxDelay: PropTypes.func,\r\n  setMetalDelay: PropTypes.func,\r\n};\r\n\r\n\r\nexport default Orders;","import {connect} from 'react-redux';\r\nimport Component from './Component';\r\nimport {\r\n  getTxMetalDelay,\r\n  } from \"./actions\";\r\n\r\n\r\n\r\nconst stp = (s) => ({\r\n  \r\n});\r\n\r\n\r\nconst dtp = (d) => ({\r\n\r\n  getTxMetalDelay: (sn) => {\r\n    d(getTxMetalDelay(sn))\r\n  },\r\n  \r\n\r\n});\r\n\r\n\r\nexport default connect(stp, dtp)(Component);\r\n","\r\nimport at from './at';\r\n\r\n\r\nconst getTxMetalDelay = (sn) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({type: at.SET_DISCOVERY_METAL_DELAY, data: 'set metal delay'})\r\n\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport {\r\n  getTxMetalDelay,\r\n }","import React , {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Products.scss';\r\n\r\n\r\n\r\nclass Products extends Component {\r\n  state = {\r\n    sliderValue: 0,\r\n    device: null,\r\n    serialNumber: '',\r\n    onDiscoveryTool: false,\r\n    txDelay: 0,\r\n    metalDelay: 0,\r\n    metalDelayFirst: true,\r\n    txDelayFirst: true,\r\n    parsedScope: [],\r\n    discoveryToolResponseNoParsed: ''\r\n  };\r\n\r\n  componentDidMount() {\r\n\r\n  }\r\n\r\n\r\n  componentWillMount() {\r\n   \r\n  }\r\n\r\n\r\n\r\n  componentWillUnmount() {\r\n  }\r\n\r\n  componentWillReceiveProps(next) {\r\n   \r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n\r\n\r\n    return (\r\n      <div className=\"discovery-section\">\r\n         Products\r\n         \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nProducts.propTypes = {\r\n  deviceConnected: PropTypes.bool,\r\n  devicesData: PropTypes.array,\r\n  device: PropTypes.object,\r\n  discoveryToolResponse: PropTypes.object,\r\n  discoveryTXDelay: PropTypes.object,\r\n  discoveryMetalDelay: PropTypes.object,\r\n  startTransmission: PropTypes.func,\r\n  stopTransmission: PropTypes.func,\r\n  getTxMetalDelay: PropTypes.func,\r\n  setTxDelay: PropTypes.func,\r\n  setMetalDelay: PropTypes.func,\r\n};\r\n\r\n\r\nexport default Products;","import {connect} from 'react-redux';\r\nimport Component from './Component';\r\nimport {\r\n  setProduct,\r\n  } from \"./actions\";\r\n\r\n\r\n\r\nconst stp = (s) => ({\r\n  \r\n});\r\n\r\n\r\nconst dtp = (d) => ({\r\n\r\n  setProduct: (sn) => {\r\n    d(setProduct(sn))\r\n  },\r\n \r\n\r\n});\r\n\r\n\r\nexport default connect(stp, dtp)(Component);\r\n","\r\nimport at from './at';\r\n\r\n\r\nconst setProduct = (sn) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({type: at.SET_DISCOVERY, data: 'set discovery'})\r\n\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport {\r\n  setProduct,\r\n }","import React , {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {NavLink} from 'react-router-dom';\r\nimport rc from '../../rootRoutes/routes';\r\nimport './Navigation.scss';\r\n\r\nclass Navigation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      connectInfo: null,\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps() {\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n\r\n\r\n    return (\r\n      <section className=\"control-panel__nav\">\r\n          <div className=\"control-panel__nav-list\">\r\n              <NavLink to={rc.products} className=\"control-panel__nav-item\">\r\n                Products link\r\n              </NavLink>\r\n              <NavLink to={rc.orders} className=\"control-panel__nav-item\">\r\n                Orders link\r\n              </NavLink>\r\n            \r\n            </div>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nNavigation.propTypes = {\r\n  inProcess: PropTypes.bool,\r\n  currentConnection: PropTypes.object,\r\n  users: PropTypes.array,\r\n};\r\n\r\nexport default Navigation;","import {connect} from 'react-redux';\r\nimport Component from './Component';\r\n\r\nconst mapStateToProps = (state) => ({\r\n  \r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) =>({\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Component);","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport rc from '../rootRoutes/routes';\r\nimport Orders from '../containers/Orders';\r\nimport Products from '../containers/Products';\r\nimport Navigation from '../containers/Navigation';\r\nimport \"./ControlPanel.scss\";\r\n\r\n\r\n\r\nclass ControlPanel extends React.Component {\r\n\r\n  componentDidUpdate() {\r\n   \r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n   \r\n  }\r\n\r\n  render() {\r\n\r\n\r\n    return (\r\n      <div className=\"control-panel\">\r\n          <Navigation/>\r\n          <Switch>\r\n              <Route component={Orders} path={rc.orders}/>\r\n              <Route component={Products} path={rc.products}/>\r\n          </Switch>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nControlPanel.propTypes = {\r\n  inProcess: PropTypes.bool,\r\n  getDevicesInfo: PropTypes.func\r\n};\r\n\r\nexport default ControlPanel;","import {connect} from 'react-redux';\r\nimport Component from './Component';\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\n\r\nconst stp = (state) => ({\r\n \r\n});\r\n\r\nconst dtp = (dispatch) => ({\r\n \r\n});\r\n\r\nexport default withRouter(connect(stp, dtp)(Component))","import React from 'react';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\nimport Main from '../main';\r\n\r\nconst Routes = () => (\r\n  <BrowserRouter>\r\n    <Main />\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default Routes;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport Routes from './rootRoutes';\n// import * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <div>\n      <Routes />\n    </div>\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}